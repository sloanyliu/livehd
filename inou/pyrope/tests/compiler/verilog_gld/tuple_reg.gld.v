/* Generated by Yosys livehd+0.9+ */

module tuple_reg(clock, en, src1, reset, src2, \out.cnt , \out.sum );
  reg [4:0] \#reg.cnt ;
  reg [17:0] \#reg.sum ;
  wire [5:0] ___i_0;
  input clock;
  input reset;
  input en;
  wire [1:0] lg_0;
  wire lg_1;
  wire lg_13;
  wire [4:0] lg_15;
  wire [4:0] lg_2;
  wire [16:0] lg_3;
  wire [1:0] lg_4;
  wire [16:0] lg_5;
  wire [4:0] lg_6;
  wire [4:0] lg_7;
  output [4:0] \out.cnt ;
  output [17:0] \out.sum ;
  wire [17:0] prev_0;
  input [15:0] src1;
  input [15:0] src2;
  assign prev_0 = lg_3 + lg_5;
  assign ___i_0 = $signed(lg_0) + $signed(\#reg.cnt );
  assign lg_6 = $signed(___i_0) & $signed(lg_7);
  assign lg_13 = lg_4 & 32'd1;
  assign lg_2 = lg_13 ? lg_6 : lg_15;
  always @(posedge clock) begin
    if (reset) begin
      \#reg.cnt  <= 'h0;
    end else begin
    \#reg.cnt  <= lg_2;
    end
  end
  always @(posedge clock) begin
    if (reset) begin
      \#reg.sum  <= 'h0;
    end else begin
    \#reg.sum  <= prev_0;
    end
  end
  assign lg_0 = 2'h1;
  assign lg_1 = 1'h0;
  assign lg_7 = 5'h0f;
  assign \out.cnt  = \#reg.cnt ;
  assign \out.sum  = \#reg.sum ;
  assign lg_3 = { 1'h0, src2 };
  assign lg_4 = { 1'h0, en };
  assign lg_5 = { 1'h0, src1 };
  assign lg_15 = { lg_1, lg_1, lg_1, lg_1, lg_1 };
endmodule
